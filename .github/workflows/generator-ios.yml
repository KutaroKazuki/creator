name: Custom iOS Client Generator
run-name: Custom iOS Client Generator
on: 
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: ''
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string

env:
  FLUTTER_VERSION: "3.24.5"
  VERSION: "${{ fromJson(inputs.extras).version }}"
  RS_PUB_KEY: "${{ inputs.key }}"
  RENDEZVOUS_SERVER: "${{ inputs.server }}"
  CUSTOM: "${{ inputs.custom }}"
  UUIDFOLDER: "${{ inputs.uuid }}"
  API_SERVER: "${{ inputs.apiServer }}"
  UPLOAD_ARTIFACT: 'true'
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"
  STATUS_URL: "${{ secrets.GENURL }}/updategh"

jobs:
  generate_bridge:
    uses: ./.github/workflows/bridge.yml
    with:
      version: ${{ fromJson(inputs.extras).version }}


  build-for-ios:
    name: Build iOS
    needs: [generate_bridge]
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: aarch64-apple-ios,
              os: macos-13,
              arch: aarch64,
              vcpkg-triplet: arm64-ios,
            }     
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install dependencies
        run: |
          brew install nasm yasm
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive      
      
      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Patch flutter
        continue-on-error: true
        run: |
            cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
            cd $(dirname $(dirname $(which flutter)))
            [[ "3.24.4" == 3.24.5 ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff
      
      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
            vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
            doNotCache: false

      - name: Install vcpkg dependencies
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
              done
              exit 1
          fi

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: rustdesk-lib-cache-ios
          key: ${{ matrix.job.target }}

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Build rustdesk lib
        run: |
          rustup target add ${{ matrix.job.target }}
          cargo build --features flutter,hwcodec --release --target aarch64-apple-ios --lib     

      - name: Upload liblibrustdesk.a Artifacts
        uses: actions/upload-artifact@master
        with:
          name: liblibrustdesk.a
          path: target/aarch64-apple-ios/release/liblibrustdesk.a

      - name: Build rustdesk
        shell: bash
        run: |
          pushd flutter
          # flutter build ipa --release --obfuscate --split-debug-info=./split-debug-info --no-codesign
          # for easy debugging
          flutter build ipa --release --no-codesign
  

      - name: Set rdgen value
        if: ${{ fromJson(inputs.extras).rdgen == 'true' }}
        run: |
          echo "STATUS_URL=${{ secrets.GENURL }}/updategh" >> $GITHUB_ENV

      - name: Set rdgen value
        if: ${{ fromJson(inputs.extras).rdgen == 'false' }}
        run: |
          echo "STATUS_URL=${{ inputs.apiServer }}/api/updategh" >> $GITHUB_ENV

      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "5% complete"}'

      - name: Checkout source code
        if: ${{ env.VERSION != 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          ref: refs/tags/${{ env.VERSION }}
          submodules: recursive

      - name: Checkout source code
        if: ${{ env.VERSION == 'master' }}
        uses: actions/checkout@v4
        with:
          repository: rustdesk/rustdesk
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: change appname to custom
        if: inputs.appname != 'rustdesk'
        continue-on-error: true
        shell: bash
        run: |
          # Change app name in Info.plist
          sed -i -e 's|<string>RustDesk</string>|<string>${{ inputs.appname }}</string>|' ./flutter/ios/Runner/Info.plist
          # Change bundle name
          sed -i -e 's|com.carriez.rustdesk|com.${{ inputs.appname }}|' ./flutter/ios/Runner.xcodeproj/project.pbxproj

      - name: change url to custom
        if: fromJson(inputs.extras).urlLink != 'https://rustdesk.com'
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|Homepage: https://rustdesk.com|Homepage: ${{ fromJson(inputs.extras).urlLink }}|' ./build.py
          sed -i -e "s|launchUrl(Uri.parse('https://rustdesk.com'));|launchUrl(Uri.parse('${{ fromJson(inputs.extras).urlLink }}'));|" ./flutter/lib/common.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com');|launchUrlString('${{ fromJson(inputs.extras).urlLink }}');|" ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com/privacy.html')|launchUrlString('${{ fromJson(inputs.extras).urlLink }}/privacy.html')|" ./flutter/lib/desktop/pages/desktop_setting_page.dart
          sed -i -e "s|const url = 'https://rustdesk.com/';|const url = '${{ fromJson(inputs.extras).urlLink }}';|" ./flutter/lib/mobile/pages/settings_page.dart
          sed -i -e "s|launchUrlString('https://rustdesk.com/privacy.html')|launchUrlString('${{ fromJson(inputs.extras).urlLink }}/privacy.html')|" ./flutter/lib/mobile/pages/settings_page.dart

      - name: change download link to custom
        if: fromJson(inputs.extras).downloadLink != 'https://rustdesk.com/download'
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|https://rustdesk.com/download|${{ fromJson(inputs.extras).downloadLink }}|' ./flutter/lib/desktop/pages/desktop_home_page.dart
          sed -i -e 's|https://rustdesk.com/download|${{ fromJson(inputs.extras).downloadLink }}|' ./flutter/lib/mobile/pages/connection_page.dart

      - name: allow custom.txt
        continue-on-error: true
        shell: bash
        run: |
          sed -i -e 's|rs-ny.rustdesk.com|${{ env.RENDEZVOUS_SERVER }}|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw=|${{ env.RS_PUB_KEY }}|' ./libs/hbb_common/src/config.rs
          sed -i -e 's|For faster connection, please set up your own server||' ./src/lang/en.rs
          sed -i -e '/const KEY:/,/};/d' ./src/common.rs
          sed -i -e '/let Ok(data) = sign::verify(&data, &pk)/,/};/d' ./src/common.rs

      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "20% complete"}'
              
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install CocoaPods
        run: |
          gem install cocoapods
          pod setup

      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "40% complete"}'

      - name: icon stuff
        if: ${{ inputs.iconlink != 'false' }}
        continue-on-error: true
        run: |
          cd flutter/ios/Runner/Assets.xcassets/AppIcon.appiconset
          curl -o icon.png "${{ fromJson(inputs.iconlink).url }}/get_png?filename=${{ fromJson(inputs.iconlink).file }}&uuid=${{ fromJson(inputs.iconlink).uuid }}"
          for size in 20 29 40 60 76 83.5 1024; do
            sips -z ${size} ${size} icon.png --out "Icon-${size}.png"
          done
          cd -

      - name: Build iOS
        run: |
          cd flutter
          flutter pub get
          cd ios
          pod install
          cd ..
          flutter build ios --release --no-codesign

      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "80% complete"}'

      - name: Create IPA
        run: |
          cd flutter/build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload/
          zip -r "${{ inputs.filename }}.ipa" Payload
          rm -rf Payload

      - name: send file to rdgen server
        if: ${{ fromJson(inputs.extras).rdgen == 'true' }}
        shell: bash
        run: |
          curl -i -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer ${{ fromJson(inputs.extras).token }}" -F "file=@./flutter/build/ios/iphoneos/${{ inputs.filename }}.ipa" -F "uuid=${{ inputs.uuid }}" ${{ secrets.GENURL }}/save_custom_client

      - name: send file to api server
        if: ${{ fromJson(inputs.extras).rdgen == 'false' }}
        shell: bash
        run: |
          curl -i -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer ${{ fromJson(inputs.extras).token }}" -F "file=@./flutter/build/ios/iphoneos/${{ inputs.filename }}.ipa" ${{ inputs.apiServer }}/api/save_custom_client

      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Success"}'

      - name: failed
        if: failure()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Generation failed, try again"}'

      - name: failed
        if: cancelled()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Generation cancelled, try again"}'
